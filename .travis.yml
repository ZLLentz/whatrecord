version: ~> 1.0

language: python
os: linux
dist: xenial

stages:
  - build

env:
  global:
    # doctr generated secure variable for documentation upload
    - secure: "ZLIQssd23KwlQKy1IDkLgeFj+cfwx7cxYPAIZTCtfgYqJfaXdukasrezZCL8CQMxOixe17q5aompiTkg+gxJT5FL1jGcRLPXcqDPO/5RVArJpD7O518jjvO88ekKHxXqKxi1YQP9A3WB16gsA1uWxqrVa+7ie8eDj/gRHLZGbKAV+h7++pTR+sgaqIjdIeSEaKMVX+0mp3qvMmwYSLGe9jddSpqSf7F7poZYpY87trG5ouxkevJanZgpbXI2Nm0rnwE1U8nZlPAzmnj9Ytd9/Tu2cbaRKrNbOkVyqBxZIteJSeipVIzXR4PZ3WbZSJP+M5iGVm+EA6ji1VgIpjhPbJE/BGNXZGu2DsApCa785LtophM/aeNSDXCVZGHU+DsN07yoBg09yJUAisMOT+ipF8Sw0rBkuhm5WxLeJfQ7cGZ5qX/K7mLUueG5cBUXk4FMmyeCXcgSF7bbGbrKWsgbO9vb5yjaUsq/4P8oRzfhe1iAcIg0u2+DkihVsKPenPPQf/lxzYyozUEfF/x13VuvFW82s6TrOk7BCD2VMCz6M20EIGCt1+9gOhm1I8OxJiL/NKcTnG5L91tN+mHUu0B+aJrhoQVT7YLFNTO89NaAokVbxrLvWKz03ALCJZpzpW2rlrD3pqOjnBSHfYdFpTSqSXVBHtGD6GpSLfY85Yz9brc="
    # enable the usage of versions menu which allow versioning of the docs
    # pages and not only the master branch
    - DOCTR_VERSIONS_MENU="1"
    # Dependency files used to build the documentation (space separated)
    - DOCS_REQUIREMENTS="requirements-dev.txt requirements.txt"
    # Options to be passed to flake8 for package linting. Usually this is just
    # the package name but you can enable other flake8 options via this config
    - PYTHON_LINT_OPTIONS="whatrecord"

    # The name of the conda package
    - CONDA_PACKAGE="whatrecord"
    # The folder containing the conda recipe (meta.yaml)
    - CONDA_RECIPE_FOLDER="conda-recipe"

    # Requirements file with contents for tests dependencies
    - CONDA_REQUIREMENTS="dev-requirements.txt"


jobs:
  include:
    - stage: build
      name: "Python 3.9 - PIP"
      python: 3.9
      install:
        - pip install --upgrade pip
        - echo "Req File':' ${REQUIREMENTS:=requirements.txt}"
        - echo "Dev Req File':' ${DEV_REQUIREMENTS:=dev-requirements.txt}"
        - |
          # Install requirements
          if [[ ! -f "${REQUIREMENTS}" ]]; then
              echo "File not found: ${REQUIREMENTS}" 1>&2
              travis_terminate 1
          else
              pip install --requirement "${REQUIREMENTS}"
          fi
        - |
          # Install development requirements
          if [[ ! -f "${DEV_REQUIREMENTS}" ]]; then
              echo "File not found: ${DEV_REQUIREMENTS}" 1>&2
              travis_terminate 1
          else
              pip install --requirement "${DEV_REQUIREMENTS}"
          fi
        - |
          # Install Extras such as PyQt5
          if [[ ! -z "${PIP_EXTRAS}" ]]; then
              echo "Installing extra pip dependencies."
              pip install ${PIP_EXTRAS}
          fi
      script:
        - |
          set -e
          if command -v coverage; then
              coverage run --concurrency=thread --parallel-mode -m pytest -vv
              (coverage combine && coverage report | grep -v -e ' 0%') || true
          else
              python -m pytest -vv
          fi
