version: ~> 1.0

language: python
os: linux
dist: xenial

stages:
  - test

env:
  global:
    # doctr generated secure variable for documentation upload
    - secure: "ZLIQssd23KwlQKy1IDkLgeFj+cfwx7cxYPAIZTCtfgYqJfaXdukasrezZCL8CQMxOixe17q5aompiTkg+gxJT5FL1jGcRLPXcqDPO/5RVArJpD7O518jjvO88ekKHxXqKxi1YQP9A3WB16gsA1uWxqrVa+7ie8eDj/gRHLZGbKAV+h7++pTR+sgaqIjdIeSEaKMVX+0mp3qvMmwYSLGe9jddSpqSf7F7poZYpY87trG5ouxkevJanZgpbXI2Nm0rnwE1U8nZlPAzmnj9Ytd9/Tu2cbaRKrNbOkVyqBxZIteJSeipVIzXR4PZ3WbZSJP+M5iGVm+EA6ji1VgIpjhPbJE/BGNXZGu2DsApCa785LtophM/aeNSDXCVZGHU+DsN07yoBg09yJUAisMOT+ipF8Sw0rBkuhm5WxLeJfQ7cGZ5qX/K7mLUueG5cBUXk4FMmyeCXcgSF7bbGbrKWsgbO9vb5yjaUsq/4P8oRzfhe1iAcIg0u2+DkihVsKPenPPQf/lxzYyozUEfF/x13VuvFW82s6TrOk7BCD2VMCz6M20EIGCt1+9gOhm1I8OxJiL/NKcTnG5L91tN+mHUu0B+aJrhoQVT7YLFNTO89NaAokVbxrLvWKz03ALCJZpzpW2rlrD3pqOjnBSHfYdFpTSqSXVBHtGD6GpSLfY85Yz9brc="
    # enable the usage of versions menu which allow versioning of the docs
    # pages and not only the master branch
    - DOCTR_VERSIONS_MENU="1"
    # Dependency files used to build the documentation (space separated)
    - DOCS_REQUIREMENTS="requirements-dev.txt requirements.txt"
    # Options to be passed to flake8 for package linting. Usually this is just
    # the package name but you can enable other flake8 options via this config
    - PYTHON_LINT_OPTIONS="whatrecord"

    # The name of the conda package
    - CONDA_PACKAGE="whatrecord"
    # The folder containing the conda recipe (meta.yaml)
    - CONDA_RECIPE_FOLDER="conda-recipe"

    # Requirements file with contents for tests dependencies
    - CONDA_REQUIREMENTS="dev-requirements.txt"
    - CONDA_EXTRAS=""
    - CONDA_ENV_NAME="testenv"
    - BUILD_REQUIREMENTS="epicscorelibs cython"


jobs:
  include:
    - &testpythonpip
      stage: test
      name: "Python 3.8 - PIP"
      python: 3.8
      install:
        - python -m pip install --upgrade pip
        # Build requirements, for now:
        - python -m pip install ${BUILD_REQUIREMENTS}
        - python -m pip install .
        - python -m pip install --requirement dev-requirements.txt
      script:
        - |
          set -e
          coverage run --concurrency=thread --parallel-mode -m pytest -vv
          (coverage combine && coverage report | grep -v -e ' 0%') || true

    - <<: *testpythonpip
      name: "Python 3.9 - PIP"
      python: 3.9

    - &testpythonconda
      stage: test
      name: "Python 3.7 - conda"
      env:
        - PYTHON_VERSION: 3.7
      install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda config --set always_yes yes --set changeps1 no
        - conda config --set channel_priority strict
        - conda config --add channels conda-forge
        - conda config --remove channels defaults
        - conda info -a
        - conda config --show

        - conda install conda-build anaconda-client
        - conda update -q conda conda-build

      before_script:
        - export PATH="$HOME/miniconda/bin:$PATH"
        - cat ${CONDA_RECIPE_FOLDER}/meta.yaml
        - conda build -q ${CONDA_RECIPE_FOLDER} --output-folder bld-dir --no-anaconda-upload

        - conda config --add channels "file://`pwd`/bld-dir"
        - conda info -a
        - conda config --show

        - conda create -n ${CONDA_ENV_NAME} python=$PYTHON_VERSION ${CONDA_PACKAGE} ${CONDA_EXTRAS} --file ${CONDA_REQUIREMENTS}
        - source activate ${CONDA_ENV_NAME}
        - conda list
      script:
        - |
          set -e
          coverage run --concurrency=thread --parallel-mode -m pytest -vv
          (coverage combine && coverage report | grep -v -e ' 0%') || true

    - <<: *testpythonconda
      name: "Python 3.8 - conda"
      env:
        - PYTHON_VERSION: 3.8

    - <<: *testpythonconda
      name: "Python 3.9 - conda"
      env:
        - PYTHON_VERSION: 3.9
